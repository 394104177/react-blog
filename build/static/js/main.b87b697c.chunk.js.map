{"version":3,"sources":["loginInfo.js","pages/Login/index.js","components/Welcome/index.js","pages/Articles/ArticlesList.js","pages/Articles/AddArticle.js","pages/Admin/index.js","components/loginLoading/index.js","components/protectRoute/index.js","routeGuard.js","App.js","redux/action.js","saga/generator.js","saga/index.js","redux/index.js","index.js"],"names":["isLogin","localStorage","getItem","loginIn","session","setItem","this","loginOut","removeItem","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","wrapperClassName","delay","title","bordered","style","width","margin","textAlign","id","size","placeholder","prefix","UserOutlined","type","color","value","onChange","e","target","Password","LockTwoTone","block","onClick","a","console","log","dataProps","message","error","axios","post","withCredentials","then","res","data","loginInfo","openId","history","push","setTimeout","index","confirm","Modal","ArticleList","list","setList","getList","method","url","header","useEffect","span","split","dataSource","renderItem","item","Item","typeId","typeName","addTime","match","partCount","viewCount","checked","_id","content","onOk","success","onCancel","Option","Select","TextArea","Input","ArticleAdd","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","datePickerRef","window","ref","useRef","nextLocation","setNextLocation","changeContent","html","marked","changeIntroduce","getTypeInfo","useCallback","clickBox","globalBlock","unblock","blockFuc","location","action","pathname","current","click","params","length","introduce","tmpInt","String","prototype","call","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","position","top","placement","onConfirm","info","gutter","defaultValue","rows","onPressEnter","dangerouslySetInnerHTML","__html","datetext","replace","Date","getTime","Math","ceil","random","isScuccess","allowClear","moment","date","dateString","option","map","Header","Layout","Content","Footer","Sider","SubMenu","Menu","SiderDemo","state","collapsed","onCollapse","setState","minHeight","collapsible","theme","defaultSelectedKeys","mode","PieChartOutlined","to","DesktopOutlined","FileOutlined","background","padding","path","exact","component","Welcome","AddArticle","React","Component","loginLoading","seconds","timer","clearInterval","setInterval","rest","render","children","context","routeGuard","unlisten","listen","prevLocation","withRouter","App","resolve","getUserConfirmation","v","callback","Admin","DECREASE","Symbol","INCREASE","SET","ASYNCINCREASE","ASYNCDECREASE","decreaseAction","increaseAction","asyncDecreaseAction","asyncIncreaseAction","setAction","payload","increase","decrease","sagatask","take","actions","all","allactions","reducer","Action","sagarun","saga","store","createStore","applyMiddleware","logger","newObj","bindActionCreators","dispatch","run","ReactDOM","document","getElementById"],"mappings":"kkBAGe,G,OAAA,CACXA,QAHUC,aAAaC,QAAQ,UAI/BC,QAAQ,SAASC,GACbH,aAAaI,QAAQ,SAASD,GAC9BE,KAAKN,SAAU,GAEnBO,SAAS,WACLN,aAAaO,WAAW,UACxBF,KAAKN,SAAU,K,+FCHR,SAASS,EAAMC,GAAQ,IAAD,EACDC,mBAAS,IADR,mBAC1BC,EAD0B,KAChBC,EADgB,OAEDF,mBAAS,IAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAGCJ,oBAAS,GAHV,mBAG1BK,EAH0B,KAGfC,EAHe,KAMjC,OACI,qBAAKC,UAAU,YAAf,SAEI,cAAC,IAAD,CAAMC,IAAI,iCAAQC,SAAUJ,EAAWK,iBAAkB,cAAeC,MAAO,IAA/E,SACI,eAAC,IAAD,CAAMC,MAAM,uCAASC,UAAU,EAAMC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OAAQC,UAAW,UAArF,UACI,cAAC,IAAD,CACIC,GAAG,WACHC,KAAK,QACLC,YAAY,uCACZC,OAAQ,cAACC,EAAA,EAAD,CAAcC,KAAK,OAAOT,MAAO,CAAEU,MAAO,aAClDC,MAAOxB,EACPyB,SAAU,SAACC,GAAQzB,EAAYyB,EAAEC,OAAOH,UAE5C,uBAAM,uBACN,cAAC,IAAMI,SAAP,CACIX,GAAG,WACHC,KAAK,QACLC,YAAY,iCACZC,OAAQ,cAACS,EAAA,EAAD,CAAahB,MAAO,CAAEU,MAAO,qBACrCC,MAAOtB,EACPuB,SAAU,SAACC,GAAQvB,EAAYuB,EAAEC,OAAOH,UAE5C,uBAAM,uBACN,cAAC,IAAD,CAAQF,KAAK,UAAUJ,KAAK,QAAQY,OAAK,EAACC,QAAO,sBAAE,4BAAAC,EAAA,yDAG/C3B,GAAa,GAEb4B,QAAQC,IAAIlC,EAAUE,GAClBiC,EAAY,CACZ,SAAYnC,EACZ,SAAYE,GAEXF,EAV0C,uBAY3CoC,IAAQC,MAAM,8CACdhC,GAAa,GAb8B,mBAcpC,GAdoC,UAenCH,EAfmC,wBAgB3CkC,IAAQC,MAAM,wCACdhC,GAAa,GAjB8B,mBAkBpC,GAlBoC,QAoB/CiC,IAAMC,KAAK,2CAA4CJ,EAAU,CAC7DK,iBAAiB,IAEhBC,MAAK,SAAAC,GACFrC,GAAa,GAGS,6BAAlBqC,EAAIC,KAAKA,MACTC,EAAUrD,QAAQmD,EAAIC,KAAKE,QAC3B/C,EAAMgD,QAAQC,KAAK,MAEnBX,IAAQC,MAAM,iDAGvBjC,GACC4C,YAAW,WACP3C,GAAa,KACd,KArCwC,4CAAnD,mC,oCC1BL4C,EARD,WACV,OACI,2C,iGCAAC,EAAYC,IAAZD,QAmHOE,MAlHf,SAAqBtD,GAAQ,IAAD,EAEAC,mBAAS,IAFT,mBAEjBsD,EAFiB,KAEXC,EAFW,KAIlBC,EAAU,WACZjB,IAAM,CACFkB,OAAQ,MACRC,IAAK,+CACLjB,iBAAiB,EACjBkB,OAAQ,CAAE,8BAA+B,OAC1CjB,MACC,SAAAC,GAEIY,EAAQZ,EAAIC,KAAKU,UAiC7B,OAJAM,qBAAU,WACN1B,QAAQC,IAAI,QACZqB,MACD,IAEC,qBAAKjD,UAAU,gBAAf,SACI,cAAC,IAAD,CAAMA,UAAU,oBAEZoD,OAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKE,KAAM,EAAX,SACI,+CAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,+CAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,2DAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,+CAEJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,qDAGJ,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,kDAKZhD,UAAQ,EACRiD,OAAK,EACLC,WAAYT,EACZU,WAAY,SAAAC,GAAI,OACZ,cAAC,IAAKC,KAAN,UACI,eAAC,IAAD,CAAK3D,UAAU,WAAf,UACI,cAAC,IAAD,CAAKsD,KAAM,EAAX,SACKI,EAAKrD,QAEV,cAAC,IAAD,CAAKiD,KAAM,EAAX,SACKI,EAAKE,OAAOC,WAEjB,cAAC,IAAD,CAAKP,KAAM,EAAX,SACKI,EAAKI,QAAQC,MAAM,mBAExB,eAAC,IAAD,CAAKT,KAAM,EAAX,mBACK,+BAAOI,EAAKM,YADjB,YAGA,cAAC,IAAD,CAAKV,KAAM,EAAX,SACKI,EAAKO,YAGV,eAAC,IAAD,CAAKX,KAAM,EAAX,UACI,cAAC,IAAD,CAAQtC,KAAK,UAAUS,QAAS,WA7DtC,IAACd,EAAGuD,EAAHvD,EA6DwD+C,EAAKS,IA5DhFxC,QAAQC,IAAIsC,GACZ1E,EAAMgD,QAAQC,KAAK,oBAAoB9B,IA2Df,0BADJ,OAGI,cAAC,IAAD,CAAQc,QAAS,WAjF1B,IAACd,IAiFyC+C,EAAKS,IAhF9DvB,EAAQ,CACJvC,MAAO,4EACP+D,QAAS,+IACTC,KAHI,WAIArC,IAAM,4CAA4CrB,EAAI,CAAEuB,iBAAiB,IAAQC,MAC7E,SAAAC,GACIN,IAAQwC,QAAQ,wCAChBrB,QAIZsB,SAXI,WAYAzC,IAAQwC,QAAQ,kDAoEA,yC,qEClGxBE,EAAWC,IAAXD,OACAE,EAAaC,IAAbD,SAoUOE,EAnUI,SAACpF,GAAW,IAAD,EACQC,mBAAS,GADjB,mBACnBoF,EADmB,KACRC,EADQ,OAEcrF,mBAAS,IAFvB,mBAEnBsF,EAFmB,KAELC,EAFK,OAGkBvF,mBAAS,IAH3B,mBAGnBwF,EAHmB,KAGHC,EAHG,OAIoBzF,mBAAS,4BAJ7B,mBAInB0F,EAJmB,KAIFC,EAJE,OAKY3F,qBALZ,mBAKnB4F,EALmB,KAKNC,EALM,OAMgB7F,mBAAS,4BANzB,mBAMnB8F,EANmB,KAMJC,EANI,OAOM/F,qBAPN,mBAOnBgG,EAPmB,KAOTC,EAPS,OAQUjG,qBARV,gCASMA,mBAAS,KATf,mBASnBkG,EATmB,KASTC,EATS,OAUYnG,qBAVZ,oBAUnBoG,GAVmB,MAULC,GAVK,MAWpBC,GAAgBC,OAAOC,IAAMC,mBAXT,GAYczG,mBAAS,IAZvB,qBAYnB0G,GAZmB,MAYLC,GAZK,MA4BpBC,GAAgB,SAACjF,GACnB8D,EAAkB9D,EAAEC,OAAOH,OAC3B,IAAIoF,EAAOC,IAAOnF,EAAEC,OAAOH,OAC3BkE,EAAmBkB,IAGjBE,GAAkB,SAACpF,GACrBkE,EAAelE,EAAEC,OAAOH,OACxB,IAAIoF,EAAOC,IAAOnF,EAAEC,OAAOH,OAC3BsE,EAAiBc,IAMfG,GACHC,sBAAW,sBAAC,4BAAAhF,EAAA,sEAEWM,IAAM,CACpBkB,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAAE,8BAA+B,KACzClB,iBAAiB,IANd,UAQe,8BANhBE,EAFC,QAQCC,KAAKA,KARN,0CAUI,WACHtD,aAAaO,WAAW,UACxBE,EAAMgD,QAAQC,KAAK,QAZpB,OAiBHmD,EAAYxD,EAAIC,KAAKA,MAjBlB,2CAmBT,CAAC7C,EAAMgD,UA8FPmE,GAAWT,mBACbU,GAAgBV,mBAChBW,GAAYX,mBACVY,GAAUJ,uBAAY,SAACK,EAAUC,GAUnC,OARAZ,GAAgBW,EAASE,UACzBtF,QAAQC,IAAImD,GACZpD,QAAQC,IAAIqD,GACZtD,QAAQC,IAAIyD,IAEXN,GAAcE,GAAgBI,IAAcsB,GAASO,QAAQC,QAGtDpC,GAAcE,GAAgBI,IACxC,CAACJ,EAAgBF,EAAcM,IAsCjC,OArCAhC,qBAAU,WApCa,IAAC1C,EAsDpB,OAfInB,EAAMuE,MAAMqD,OAAOzG,IAAuB,IAAnBgF,EAAS0B,SAChCZ,KAxCgB9F,EAyCAnB,EAAMuE,MAAMqD,OAAOzG,GAxCvCqB,IAAM,gDAAkDrB,EAAI,CACxDuB,iBAAiB,EACjBkB,OAAQ,CAAE,8BAA+B,OAC1CjB,MACC,SAAAC,GACIT,QAAQC,IAAIQ,EAAIC,MAChB2C,EAAgB5C,EAAIC,KAAKA,KAAKhC,OAC9B6E,EAAkB9C,EAAIC,KAAKA,KAAK4C,gBAChC,IAAIqB,EAAOC,IAAOnE,EAAIC,KAAKA,KAAK4C,gBAChCG,EAAmBkB,GACnBhB,EAAelD,EAAIC,KAAKA,KAAKiF,WAC7B,IAAIC,EAAShB,IAAOnE,EAAIC,KAAKA,KAAKiF,WAClC9B,EAAiB+B,GAEjB7B,EAAY8B,OAAOC,UAAU1D,MAAM2D,KAAKtF,EAAIC,KAAKA,KAAKyB,QAAS,iBAAiB,IAChFgB,EAAanE,GACbmF,GAAc1D,EAAIC,KAAKA,KAAKuB,YA+BpCgD,GAAYM,QAAU,WAClBvF,QAAQC,IAAI,SACZiF,GAAQK,QAAS1H,EAAMgD,QAAQhB,MAAMsF,KAEzCF,GAAYM,UAEL,WACHL,GAAQK,UACRL,GAAQK,QAAU,KAElBvF,QAAQC,IAAI,gBAGjB,CAACqD,EAAgBF,EAAc+B,GAAUL,GAAapB,EAAa7F,EAAMgD,QAAShD,EAAMuE,MAAMqD,OAAOzG,GAAIgF,EAAS0B,SACrHd,IAAOoB,WAAW,CACdC,SAAUrB,IAAOsB,WACjBC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,aAAa,IAIb,gCACI,qBAAK7H,MAAO,CAAE8H,SAAU,QAASC,IAAK,GAAtC,SACI,cAAC,IAAD,CAAYC,UAAU,MAClBlI,MAAM,uFACNmI,UAAW,WAAQ1G,IAAQ2G,KAAK,6BAAS5B,GAAQK,UAAU1H,EAAMgD,QAAQC,KAAK0D,KAC9E5B,SAAW,WAA+B,OAAvBzC,IAAQ2G,KAAK,8BAAiB,GAHrD,SAIe,cAAC,IAAD,CAAQxC,IAAKU,SAKhC,eAAC,IAAD,CAAK+B,OAAQ,EAAb,UAEI,eAAC,IAAD,CAAKpF,KAAM,GAAX,UACI,eAAC,IAAD,CAAKoF,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKpF,KAAM,GAAX,SACI,cAAC,IAAD,CACIzC,YAAY,2BACZD,KAAK,QACLO,SAAU,SAAAC,GAEN4D,EAAgB5D,EAAEC,OAAOH,QAE7BA,MAAO6D,MAGf,eAAC,IAAD,CAAKzB,KAAM,EAAX,iBAEI,cAAC,IAAD,CAAQqF,aAAa,UAAU/H,KAAK,QAApC,SACI,cAAC4D,EAAD,CAAQtD,MAAM,UAAd,8CAIZ,uBACA,eAAC,IAAD,CAAKwH,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKpF,KAAM,GAAX,SACI,cAACoB,EAAD,CACIxD,MAAO+D,EACPjF,UAAU,mBACV4I,KAAM,GACNzH,SAAUkF,GACVwC,aAAcxC,GACdxF,YAAY,+BAIpB,cAAC,IAAD,CAAKyC,KAAM,GAAX,SACI,qBACItD,UAAU,YACV8I,wBAAyB,CAAEC,OAAQ5D,aAMnD,cAAC,IAAD,CAAK7B,KAAM,EAAX,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKA,KAAM,GAAX,UACI,cAAC,IAAD,CAAQ1C,KAAK,QAAb,sCADJ,OAEI,cAAC,IAAD,CAAQI,KAAK,UAAUJ,KAAK,QAAQa,QA1MxC,WAChB,IAAKoE,GAED,OADA/D,IAAQC,MAAM,qDACP,EACJ,IAAKgD,EAER,OADAjD,IAAQC,MAAM,qDACP,EACJ,IAAKkD,EAER,OADAnD,IAAQC,MAAM,qDACP,EACJ,IAAKsD,EAER,OADAvD,IAAQC,MAAM,yCACP,EACJ,IAAK0D,EAER,OADA3D,IAAQC,MAAM,qDACP,EAEXD,IAAQwC,QAAQ,4BAChB,IAAIzC,EAAY,GAChBA,EAAU+B,OAASiC,GACnBhE,EAAUxB,MAAQ0E,EAClBlD,EAAUoD,eAAiBA,EAC3BpD,EAAUyF,UAAYjC,EACtB,IAAI2D,EAAWvD,EAASwD,QAAQ,IAAK,KACrCpH,EAAUiC,QAAW,IAAIoF,KAAKF,GAAUG,UAEtB,IAAdtE,GACAlD,QAAQC,IAAI,cAAgBiD,GAC5BhD,EAAUoC,UAAYmF,KAAKC,KAAqB,IAAhBD,KAAKE,UAAkB,IACvDtH,IAAM,CACFkB,OAAQ,OACRC,IAAK,4CACLd,KAAMR,EACNK,iBAAiB,IAClBC,MACC,SAAAC,GACI0C,EAAa1C,EAAIC,KAAJ,KACTD,EAAIC,KAAKkH,WACTzH,IAAQwC,QAAQ,wCAEhBxC,IAAQC,MAAM,6CAO1BJ,QAAQC,IAAI,cAAgBiD,GAC5BhD,EAAUoC,UAAYmF,KAAKC,KAAqB,IAAhBD,KAAKE,UAAkB,IACvDzH,EAAUsC,IAAMU,EAEhB7C,IAAM,CACFkB,OAAQ,OACRC,IAAK,8CACLd,KAAMR,EACNK,iBAAiB,IAClBC,MACC,SAAAC,GAEQA,EAAIC,KAAKkH,WACTzH,IAAQwC,QAAQ,wCAEhBxC,IAAQC,MAAM,6CA4IV,sCACA,0BAEJ,eAAC,IAAD,CAAKuB,KAAM,GAAX,UACI,uBACA,cAACoB,EAAD,CACIkE,KAAM,EACN1H,MAAOmE,EACPlE,SAAUqF,GACVqC,aAAcrC,GACd3F,YAAY,6BAEhB,qBACIb,UAAU,iBACV8I,wBAAyB,CAAEC,OAAQ,iCAAUxD,QAIrD,cAAC,IAAD,CAAKjC,KAAM,GAAX,SACI,qBAAKtD,UAAU,cAAf,SACI,cAAC,IAAD,CACIwJ,YAAY,EACZtI,MAAOuI,IAAOhE,GACdQ,IAAKF,GACLlF,YAAY,2BACZD,KAAK,QACLO,SAAU,SAACuI,EAAMC,GACbhI,QAAQC,I,UAAU8H,EAAMC,GACxBjE,EAAYiE,UAM5B,cAAC,IAAD,CAAKrG,KAAM,EAAX,SAEI,cAAC,IAAD,CAAQqF,aAAc,iCAASzH,MAAO2E,GAAcjF,KAAK,QAAQO,SA1Q/D,SAACD,EAAO0I,GAE9B9D,GAAc5E,IAwQoGlB,UAAU,cAAxG,SAEQ2F,EAASkE,KAAI,SAACnG,EAAMf,GAEhB,OAAQ,cAAC6B,EAAD,CAAoBtD,MAAOwC,EAAKS,IAAK9D,MAAOqD,EAAKS,IAAjD,SAAuDT,EAAKG,UAA/ClB,sBCrTrDmH,G,OAAmCC,IAAnCD,QAAQE,GAA2BD,IAA3BC,QAASC,GAAkBF,IAAlBE,OAAQC,GAAUH,IAAVG,MACzBC,GAAYC,IAAZD,QAyEOE,G,4MArEXC,MAAQ,CACJC,WAAW,G,EAGfC,WAAa,SAAAD,GACT5I,QAAQC,IAAI2I,GACZ,EAAKE,SAAS,CAAEF,e,4CAGpB,WACI,OACI,eAAC,IAAD,CAAQhK,MAAO,CAAEmK,UAAW,SAA5B,UACI,eAACR,GAAD,CAAOS,aAAW,EAACJ,UAAWnL,KAAKkL,MAAMC,UAAWC,WAAYpL,KAAKoL,WAArE,UACI,qBAAKxK,UAAU,SACf,eAAC,IAAD,CAAM4K,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,SAApD,UACI,eAAC,IAAKnH,KAAN,WACI,cAACoH,EAAA,EAAD,IACA,+BAAM,cAAC,IAAD,CAAMC,GAAG,YAAT,oCAFK,KAIf,eAAC,IAAKrH,KAAN,WACI,cAACsH,EAAA,EAAD,IACA,+BAAM,cAAC,IAAD,CAAMD,GAAG,gBAAT,0CAFK,KAIf,eAACb,GAAD,CAEI9J,MACI,qCACI,cAACU,EAAA,EAAD,IACA,+DALZ,UAYI,cAAC,IAAK4C,KAAN,UAAmB,cAAC,IAAD,CAAMqH,GAAG,gBAAT,uCAAJ,KACf,cAAC,IAAKrH,KAAN,UAAmB,cAAC,IAAD,CAAMqH,GAAG,iBAAT,uCAAJ,OAZX,QAgBR,eAAC,IAAKrH,KAAN,WACI,cAACuH,EAAA,EAAD,IACA,8DAFW,WAMvB,eAAC,IAAD,WACI,cAACpB,EAAD,CAAQvJ,MAAO,CAAE4K,WAAY,gBAAiBC,QAAS,KACvD,eAACpB,GAAD,CAASzJ,MAAO,CAAE4K,WAAY,oBAAoB1K,OAAQ,SAAS2K,QAAQ,UAA3E,UACI,eAAC,IAAD,CAAY7K,MAAO,CAAEE,OAAQ,UAA7B,UACI,cAAC,IAAWkD,KAAZ,mBACA,cAAC,IAAWA,KAAZ,sBAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0H,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,iBAAiBC,OAAK,EAACC,UAAWzI,IAC9C,cAAC,IAAD,CAAOuI,KAAK,uBAAuBC,OAAK,EAACC,UAAWE,IACpD,cAAC,IAAD,CAAOJ,KAAK,gBAAgBC,OAAK,EAACC,UAAWE,UAKrD,cAACxB,GAAD,CAAQ1J,MAAO,CAAEG,UAAW,UAA5B,8D,GA/DIgL,IAAMC,W,mBCYfC,G,4MAvBVtB,MAAM,CACFuB,QAAQ,G,EAGZC,MAAM,K,0DACN,WACIC,cAAc3M,KAAK0M,S,+BAGvB,WAAoB,IAAD,OACnB1M,KAAK0M,MAAUE,aAAY,WACpB,EAAKvB,SAAS,CAACoB,QAAQ,EAAKvB,MAAMuB,QAAQ,MAC3C,O,oBAEP,WAEG,OAAS,8BACJzM,KAAKkL,MAAMuB,SAAW,EAAG,2FAAiBzM,KAAKkL,MAAMuB,WAAe,cAAC,IAAD,CAAUb,GAAG,iB,GAlBjEU,IAAMC,WCiBnBhJ,GAfD,SAAC,GAAmD,IAAxCgJ,EAAuC,EAAjDJ,UAAuCU,GAAU,EAA7BC,OAA6B,EAAtBC,SAAsB,mDAC7D,OACI,8BACI,cAAC,IAAD,6BAAWF,GAAX,IAAiBC,OAAQ,SAAAE,GACrB,OAAG9J,EAAUxD,QACF,cAAC6M,EAAD,IAED,cAAC,GAAD,WCTpBU,G,uKACF,WAAqB,IAAD,OAChBjN,KAAKkN,SAAWlN,KAAKI,MAAMgD,QAAQ+J,QAAO,SAACxF,EAAUC,GACjD,GAAI,EAAKxH,MAAM2B,SAAU,CACrB,IAAMqL,EAAe,EAAKhN,MAAMuH,SAChC,EAAKvH,MAAM2B,SAASqL,EAAczF,EAAUC,EAAQ,EAAKsF,gB,kCAMrE,WACIlN,KAAKkN,a,oBAET,WACI,OAAOlN,KAAKI,MAAM2M,a,GAfDR,aAmBVc,eAAWJ,I,qBCSXK,OAxBf,WAEI,OADA/K,QAAQC,IAAIyJ,KAAKsB,QAAQ,MAAM,yBAE3B,cAAC,IAAD,CAAQC,oBAAqB,SAACC,EAAGC,GAC7BnL,QAAQC,KAAKiL,GACbC,GACSD,IAHb,SASI,cAAC,GAAD,CAAY1L,SAAU,SAACqL,EAAczF,EAAUC,EAAQsF,GACnD3K,QAAQC,IAAI4K,EAAczF,EAAUC,IADxC,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqE,KAAK,SAASE,UAAWhM,EAAO+L,OAAK,IAC5C,cAAC,GAAD,CAAcC,UAAWwB,a,SCvBhC/F,GAAU,CACnBgG,SAASC,OAAO,YAChBC,SAASD,OAAO,YAChBE,IAAIF,OAAO,OACXG,cAAcH,OAAO,kBACrBI,cAAcJ,OAAO,mBAIZK,GAAiB,WAC1B,MAAO,CACHtM,KAAKgG,GAAOgG,WAGPO,GAAiB,WAC1B,MAAO,CACHvM,KAAKgG,GAAOkG,WAIPM,GAAsB,WAE/B,MAAO,CACHxM,KAAKgG,GAAOqG,gBAGPI,GAAsB,WAC/B,MAAO,CACHzM,KAAKgG,GAAOoG,gBAIPM,GAAW,SAASC,GAC7B,MAAO,CACH3M,KAAKgG,GAAOmG,IACZQ,QAAQA,I,qDCjCEC,I,YAGAC,IAHX,SAAWD,KAAX,kGAGA,SAAWC,KAAX,kG,gBCFoBC,IAAX,SAAWA,KAAX,yEAGE,OAFdnM,QAAQC,IAAI,oBADA,SAGQmM,aAAK/G,GAAOqG,eAHpB,OAKK,OAFbW,EAHQ,gBAKWC,aAAI,CAACL,KAAWC,OAL3B,OAKRK,EALQ,OAMZvM,QAAQC,IAAI,SAASoM,EAAQE,GANjB,wCCIT,SAASC,KAA4B,IAApB7D,EAAmB,uDAAX,EAAGtD,EAAQ,uCAEvC,OAAQA,EAAOhG,MACX,KAAKoN,GAAcpB,SACf,OAAO1C,EAAQ,EACnB,KAAK8D,GAAclB,SACf,OAAO5C,EAAQ,EACnB,KAAK8D,GAAcjB,IACf,OAAO7C,EAAQtD,EAAO2G,QAC1B,QACI,OAAOrD,GAInB,IAAI+D,GAAUC,eACRC,GAAQC,aAAYL,GAASM,aAAgBJ,GAASK,OAItDC,GAASC,aAAmB,gBAC7BR,GAEFG,GAAMM,UAETlN,QAAQC,IAAI+M,IAIZN,GAAQS,IAAIhB,IAKZa,GAAOpB,iBACPgB,GAAMM,SAAST,MCnCf,IAAIhM,GAAM2M,IAAS7C,OAEf,cAAC,GAAD,IAEF8C,SAASC,eAAe,SAAQ,WAAWtN,QAAQC,IAAI,YAAYxC,SAGrEuC,QAAQC,IAAIQ,IACZT,QAAQC,IAAIuM,M","file":"static/js/main.b87b697c.chunk.js","sourcesContent":["\r\nlet isLogin = localStorage.getItem(\"openId\")\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    isLogin,\r\n    loginIn:function(session){\r\n        localStorage.setItem('openId',session)\r\n        this.isLogin = true\r\n    },\r\n    loginOut:function(){\r\n        localStorage.removeItem('openId');\r\n        this.isLogin = false\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport \"./index.css\"\r\nimport loginInfo from \"../../loginInfo\"\r\n// import * as service from \"../../services/articles\"\r\nimport 'antd/dist/antd.css';\r\nimport { Card, Input, Button, Spin, message } from 'antd';\r\nimport { LockTwoTone, UserOutlined } from \"@ant-design/icons\"\r\nimport axios from \"axios\"\r\nexport default function Login(props) {\r\n    const [userName, setUserName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    return (\r\n        <div className=\"login-div\" >\r\n\r\n            <Spin tip=\"正在登陆中\" spinning={isLoading} wrapperClassName={\"spinWrapper\"} delay={100}>\r\n                <Card title=\"博客后台管理\" bordered={true} style={{ width: 400, margin: \"auto\", textAlign: \"center\" }} >\r\n                    <Input\r\n                        id=\"userName\"\r\n                        size=\"large\"\r\n                        placeholder=\"请输入账户名\"\r\n                        prefix={<UserOutlined type=\"user\" style={{ color: '#1890ff' }} />}\r\n                        value={userName}\r\n                        onChange={(e) => { setUserName(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Input.Password\r\n                        id=\"password\"\r\n                        size=\"large\"\r\n                        placeholder=\"请输入密码\"\r\n                        prefix={<LockTwoTone style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        value={password}\r\n                        onChange={(e) => { setPassword(e.target.value) }}\r\n                    />\r\n                    <br /><br />\r\n                    <Button type=\"primary\" size=\"large\" block onClick={async () => {\r\n                        // const res = await service.getAllStudents()\r\n                        // console.log(res)\r\n                        setIsLoading(true)\r\n\r\n                        console.log(userName, password)\r\n                        let dataProps = {\r\n                            'userName': userName,\r\n                            'passWord': password\r\n                        }\r\n                        if (!userName) {\r\n                       \r\n                            message.error('用户名不能为空')\r\n                            setIsLoading(false)\r\n                            return false\r\n                        } else if (!password) {\r\n                            message.error('密码不能为空')\r\n                            setIsLoading(false)\r\n                            return false\r\n                        }\r\n                        axios.post(\"http://localhost:7001/backEnd/checkLogin\", dataProps,{\r\n                            withCredentials: true\r\n                        })\r\n                            .then(res => {\r\n                                setIsLoading(false)\r\n\r\n\r\n                                if (res.data.data === '登录成功') {\r\n                                    loginInfo.loginIn(res.data.openId)\r\n                                    props.history.push('/')\r\n                                } else {\r\n                                    message.error('用户名密码错误')\r\n                                }\r\n                            })\r\n                        if(isLoading){\r\n                            setTimeout(() => {\r\n                                setIsLoading(false)\r\n                            }, 1000)\r\n                        }\r\n                      \r\n                    }}> 登录 </Button>\r\n                </Card>\r\n            </Spin>\r\n        </div>\r\n        // <div className=\"login\">\r\n        //     <h1>登录授权页</h1>\r\n        //     <Input type=\"text\" />\r\n        //     <Input type=\"password\" />\r\n        //     <Button onClick={async () => {\r\n        //         const res = await service.getAllStudents()\r\n        //         console.log(res)\r\n        //         loginInfo.loginIn()\r\n        //         this.props.history.push(\"/\")\r\n        //     }} >登录</Button>\r\n        // </div>\r\n    )\r\n\r\n}\r\n","\r\nimport React from 'react';\r\n\r\nconst index = () => {\r\n    return (\r\n        <div>\r\n            welcome\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default index;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport \"./ArticleList.css\"\r\nimport { List, Row, Col, Modal, message, Button, Switch } from 'antd';\r\nimport axios from 'axios'\r\nconst { confirm } = Modal;\r\nfunction ArticleList(props) {\r\n\r\n    const [list, setList] = useState([])\r\n\r\n    const getList = () => {\r\n        axios({\r\n            method: 'get',\r\n            url: \"http://localhost:7001/backEnd/getArticleList\",\r\n            withCredentials: true,\r\n            header: { 'Access-Control-Allow-Origin': '*' }\r\n        }).then(\r\n            res => {\r\n        \r\n                setList(res.data.list)\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    const delArticle = (id) => {\r\n        confirm({\r\n            title: '确定要删除这篇博客文章吗?',\r\n            content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\r\n            onOk() {\r\n                axios(\"http://localhost:7001/backEnd/delArticle/\"+id, { withCredentials: true }).then(\r\n                    res => {\r\n                        message.success('文章删除成功')\r\n                        getList()\r\n                    }\r\n                )\r\n            },\r\n            onCancel() {\r\n                message.success('删除动作已撤销')\r\n            },\r\n        });\r\n\r\n    }\r\n    const updateArticle = (id,checked)=>{\r\n        console.log(checked)\r\n        props.history.push('/articles/update/'+id)\r\n    \r\n    }\r\n    useEffect(function () {\r\n        console.log(\"list\")\r\n        getList()\r\n    }, [])\r\n    return (\r\n        <div className=\"listContainer\">\r\n            <List className=\"listItemContainer\"\r\n           \r\n                header={\r\n           \r\n                    <Row  >\r\n                        <Col span={8}>\r\n                            <b>标题</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>类别</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>发布时间</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>集数</b>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <b>浏览量</b>\r\n                        </Col>\r\n\r\n                        <Col span={4}>\r\n                            <b>操作</b>\r\n                        </Col>\r\n                    </Row>\r\n               \r\n                }\r\n                bordered\r\n                split\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <Row className=\"list-div\">\r\n                            <Col span={8}>\r\n                                {item.title}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.typeId.typeName}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.addTime.match(/[0-9-]*(?=T)/g)}\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                共<span>{item.partCount}</span>集\r\n                            </Col>\r\n                            <Col span={3}>\r\n                                {item.viewCount}\r\n                            </Col>\r\n\r\n                            <Col span={4}>\r\n                                <Button type=\"primary\" onClick={()=>{updateArticle(item._id)}}>修改</Button>&nbsp;\r\n\r\n                                <Button onClick={()=>{delArticle(item._id)}}>删除 </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </List.Item>\r\n                )}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ArticleList;\r\n","import React, { useState, useEffect, useRef ,useCallback} from 'react';\r\nimport marked from 'marked'\r\nimport './AddArticle.css'\r\nimport { Row, Col, Input, Select, Button, DatePicker, message, Popconfirm } from 'antd'\r\nimport axios from 'axios'\r\nimport moment from '_moment@2.29.1@moment';\r\nimport { Prompt, Redirect } from 'react-router';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input\r\nconst ArticleAdd = (props) => {\r\n    const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n    const [articleTitle, setArticleTitle] = useState('')   //文章标题\r\n    const [articleContent, setArticleContent] = useState('')  //markdown的编辑内容\r\n    const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\r\n    const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\r\n    const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\r\n    const [showDate, setShowDate] = useState()   //发布日期\r\n    const [updateDate, setUpdateDate] = useState() //修改日志的日期\r\n    const [typeInfo, setTypeInfo] = useState([]) // 文章类别信息\r\n    const [selectedType, setSelectType] = useState() //选择的文章类别\r\n    const datePickerRef = window.ref = useRef()\r\n    const [nextLocation, setNextLocation] = useState(\"\")\r\n\r\n    const resetState = function () {\r\n\r\n        setArticleId(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\r\n        setArticleTitle('')   //文章标题\r\n        setArticleContent('')  //markdown的编辑内容\r\n        setMarkdownContent('预览内容') //html内容\r\n        setIntroducemd()            //简介的markdown内容\r\n        setIntroducehtml('等待编辑') //简介的html内容\r\n        setShowDate()   //发布日期\r\n        setUpdateDate() //修改日志的日期\r\n        setTypeInfo([]) // 文章类别信息\r\n        setSelectType() //选择的文章类别\r\n\r\n    }\r\n    const changeContent = (e) => {\r\n        setArticleContent(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setMarkdownContent(html)\r\n    }\r\n\r\n    const changeIntroduce = (e) => {\r\n        setIntroducemd(e.target.value)\r\n        let html = marked(e.target.value)\r\n        setIntroducehtml(html)\r\n    }\r\n    const selectTypeHandler = (value, option) => {\r\n\r\n        setSelectType(value)\r\n    }\r\n    const getTypeInfo = \r\n       useCallback(async () => {\r\n\r\n            const res = await axios({\r\n                method: 'get',\r\n                url: \"http://localhost:7001/backEnd/getTypeInfo\",\r\n                header: { 'Access-Control-Allow-Origin': '*' },\r\n                withCredentials: true\r\n            })\r\n            if (res.data.data === \"没有登录\") {\r\n    \r\n                return () => {\r\n                    localStorage.removeItem('openId')\r\n                    props.history.push('/')\r\n                }\r\n    \r\n    \r\n            } else {\r\n                setTypeInfo(res.data.data)\r\n            }\r\n        },[props.history])\r\n       \r\n     \r\n\r\n    const saveArticle = () => {\r\n        if (!selectedType) {\r\n            message.error('必须选择文章类别')\r\n            return false\r\n        } else if (!articleTitle) {\r\n            message.error('文章名称不能为空')\r\n            return false\r\n        } else if (!articleContent) {\r\n            message.error('文章内容不能为空')\r\n            return false\r\n        } else if (!introducemd) {\r\n            message.error('简介不能为空')\r\n            return false\r\n        } else if (!showDate) {\r\n            message.error('发布日期不能为空')\r\n            return false\r\n        }\r\n        message.success('检验通过')\r\n        let dataProps = {}   //传递到接口的参数\r\n        dataProps.typeId = selectedType\r\n        dataProps.title = articleTitle\r\n        dataProps.articleContent = articleContent\r\n        dataProps.introduce = introducemd\r\n        let datetext = showDate.replace('-', '/') //把字符串转换成时间戳\r\n        dataProps.addTime = (new Date(datetext).getTime())\r\n        //首次添加文章\r\n        if (articleId === 0) {\r\n            console.log('articleId=:' + articleId)\r\n            dataProps.viewCount = Math.ceil(Math.random() * 100) + 1000\r\n            axios({\r\n                method: 'post',\r\n                url: \"http://localhost:7001/backEnd/addArticles\",\r\n                data: dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res => {\r\n                    setArticleId(res.data[\"_id\"])\r\n                    if (res.data.isScuccess) {\r\n                        message.success('文章保存成功')\r\n                    } else {\r\n                        message.error('文章保存失败');\r\n                    }\r\n\r\n                }\r\n            )\r\n            //修改文章\r\n        } else {\r\n            console.log('articleId=:' + articleId)\r\n            dataProps.viewCount = Math.ceil(Math.random() * 100) + 1000\r\n            dataProps._id = articleId\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: \"http://localhost:7001/backEnd/updateArticle\",\r\n                data: dataProps,\r\n                withCredentials: true\r\n            }).then(\r\n                res => {\r\n\r\n                    if (res.data.isScuccess) {\r\n                        message.success('文章保存成功')\r\n                    } else {\r\n                        message.error('文章保存失败');\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n    }\r\n    const getArticleById = (id) => {\r\n        axios(\"http://localhost:7001/backEnd/getArticleById/\" + id, {\r\n            withCredentials: true,\r\n            header: { 'Access-Control-Allow-Origin': '*' }\r\n        }).then(\r\n            res => {\r\n                console.log(res.data)\r\n                setArticleTitle(res.data.data.title)\r\n                setArticleContent(res.data.data.articleContent)\r\n                let html = marked(res.data.data.articleContent)\r\n                setMarkdownContent(html)\r\n                setIntroducemd(res.data.data.introduce)\r\n                let tmpInt = marked(res.data.data.introduce)\r\n                setIntroducehtml(tmpInt)\r\n\r\n                setShowDate(String.prototype.match.call(res.data.data.addTime, /[0-9-]+(?=T)/g)[0])\r\n                setArticleId(id)\r\n                setSelectType(res.data.data.typeId)\r\n            }\r\n        )\r\n    }\r\n    const clickBox = useRef()\r\n    let globalBlock   = useRef()\r\n    let unblock   = useRef()\r\n    const blockFuc =useCallback((location, action) => {\r\n\r\n        setNextLocation(location.pathname);\r\n        console.log(articleTitle);\r\n        console.log(articleContent);\r\n        console.log(introducemd);\r\n     \r\n        (articleTitle||articleContent||introducemd)&&clickBox.current.click()\r\n   \r\n\r\n        return (articleTitle||articleContent||introducemd)\r\n    },[articleContent, articleTitle, introducemd])\r\n    useEffect(function () {\r\n    \r\n   \r\n        if( props.match.params.id&&typeInfo.length ===0){\r\n            getTypeInfo()\r\n            getArticleById( props.match.params.id)\r\n        }else{\r\n            \r\n        }\r\n       \r\n     \r\n    \r\n        globalBlock.current = ()=>{\r\n            console.log(\"block\")\r\n            unblock.current= props.history.block(blockFuc)\r\n        }\r\n        globalBlock.current()\r\n\r\n        return () => {\r\n            unblock.current()\r\n            unblock.current = null     \r\n          \r\n            console.log(\"unmounted\")\r\n\r\n        }\r\n    }, [articleContent, articleTitle, blockFuc, getTypeInfo, introducemd, props.history, props.match.params.id, typeInfo.length])\r\n    marked.setOptions({\r\n        renderer: marked.Renderer(),\r\n        gfm: true,\r\n        pedantic: false,\r\n        sanitize: false,\r\n        tables: true,\r\n        breaks: false,\r\n        smartLists: true,\r\n        smartypants: false,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ position: \"fixed\", top: 0 }}>\r\n                <Popconfirm placement=\"top\"\r\n                    title=\"当前文档正在编辑，确认离开？\"\r\n                    onConfirm={() => { message.info('开始跳转.');unblock.current();props.history.push(nextLocation)    }}\r\n                    onCancel ={() => { message.info('取消跳转.'); return true }} >             \r\n                               <Button ref={clickBox} ></Button>\r\n                </Popconfirm>\r\n\r\n            </div>\r\n\r\n            <Row gutter={5}>\r\n                {/* 文章显示列 */}\r\n                <Col span={18}>\r\n                    <Row gutter={10} >\r\n                        <Col span={20}>\r\n                            <Input\r\n                                placeholder=\"博客标题\"\r\n                                size=\"large\"\r\n                                onChange={e => {\r\n\r\n                                    setArticleTitle(e.target.value)\r\n                                }}\r\n                                value={articleTitle}\r\n                            />\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            &nbsp;\r\n                            <Select defaultValue=\"Sign Up\" size=\"large\">\r\n                                <Option value=\"Sign Up\">视频教程</Option>\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row gutter={10} >\r\n                        <Col span={12}>\r\n                            <TextArea\r\n                                value={articleContent}\r\n                                className=\"markdown-content\"\r\n                                rows={35}\r\n                                onChange={changeContent}\r\n                                onPressEnter={changeContent}\r\n                                placeholder=\"文章内容\"\r\n                            />\r\n\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <div\r\n                                className=\"show-html\"\r\n                                dangerouslySetInnerHTML={{ __html: markdownContent }} >\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                {/* 文章暂存列 */}\r\n                <Col span={6}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Button size=\"large\">暂存文章</Button>&nbsp;\r\n                            <Button type=\"primary\" size=\"large\" onClick={saveArticle} >发布文章</Button>\r\n                            <br />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <br />\r\n                            <TextArea\r\n                                rows={4}\r\n                                value={introducemd}\r\n                                onChange={changeIntroduce}\r\n                                onPressEnter={changeIntroduce}\r\n                                placeholder=\"文章简介\"\r\n                            />\r\n                            <div\r\n                                className=\"introduce-html\"\r\n                                dangerouslySetInnerHTML={{ __html: '文章简介：' + introducehtml }} >\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col span={12}>\r\n                            <div className=\"date-select\">\r\n                                <DatePicker\r\n                                    allowClear={false}\r\n                                    value={moment(showDate)}\r\n                                    ref={datePickerRef}\r\n                                    placeholder=\"发布日期\"\r\n                                    size=\"large\"\r\n                                    onChange={(date, dateString) => {\r\n                                        console.log(this, date, dateString)\r\n                                        setShowDate(dateString)\r\n                                    }}\r\n\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={4}>\r\n\r\n                            <Select defaultValue={\"请选择分区\"} value={selectedType} size=\"large\" onChange={selectTypeHandler} className=\"date-select\">\r\n                                {\r\n                                    typeInfo.map((item, index) => {\r\n\r\n                                        return (<Option key={index} value={item._id} title={item._id}>{item.typeName}</Option>)\r\n                                    })\r\n                                }\r\n\r\n\r\n                            </Select>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ArticleAdd;\r\n","import React from 'react';\r\nimport Welcome from \"../../components/Welcome\"\r\nimport { Link, Switch } from \"react-router-dom\"\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { PieChartOutlined, DesktopOutlined, UserOutlined, TeamOutlined, FileOutlined } from \"@ant-design/icons\"\r\nimport ArticleList from \"../Articles/ArticlesList\"\r\nimport AddArticle from \"../Articles/AddArticle\"\r\n\r\nimport { Route } from 'react-router-dom'\r\nimport \"./index.css\"\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nclass SiderDemo extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                        <Menu.Item key=\"1\">\r\n                            <PieChartOutlined />\r\n                            <span><Link to=\"/articles\">工作台</Link></span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <DesktopOutlined />\r\n                            <span><Link to=\"/articles/add\">添加文章</Link></span>\r\n                        </Menu.Item>\r\n                        <SubMenu\r\n                            key=\"sub1\"\r\n                            title={\r\n                                <>\r\n                                    <UserOutlined />\r\n                                    <span>\r\n\r\n                                       文章管理\r\n                                    </span>\r\n                                </>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"3\"><Link to=\"/articles/add\">添加文章</Link></Menu.Item>\r\n                            <Menu.Item key=\"4\"><Link to=\"/articles/list\">文章列表</Link></Menu.Item>\r\n\r\n                        </SubMenu>\r\n\r\n                        <Menu.Item key=\"9\">\r\n                            <FileOutlined />\r\n                            <span>留言管理</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header style={{ background: 'rgba(0,0,0,0)', padding: 0 }} />\r\n                    <Content style={{ background: 'rgba(255,255,255)',margin: '0 16px',padding:\"0 10px\" }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={Welcome} />\r\n                            <Route path=\"/articles/list\" exact component={ArticleList} />\r\n                            <Route path=\"/articles/update/:id\" exact component={AddArticle} />\r\n                            <Route path=\"/articles/add\" exact component={AddArticle} />\r\n                          \r\n                        </Switch>\r\n\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Ant Design ©2021 Created by Ant UED</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SiderDemo","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\"\r\n class loginLoading extends React.Component {\r\n     state={\r\n         seconds:5\r\n        \r\n     }\r\n     timer=null\r\n     componentWillUnmount(){\r\n         clearInterval(this.timer)\r\n     }\r\n\r\n     componentDidMount(){\r\n     this.timer =   setInterval(() => {\r\n            this.setState({seconds:this.state.seconds-1})\r\n        }, 1000);\r\n     }\r\n    render(){\r\n       \r\n       return  (<div>\r\n           {this.state.seconds >= 0? <div>请先登录,5秒之后跳转{this.state.seconds}</div>:<Redirect to=\"/login\"></Redirect>   }\r\n           \r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default loginLoading;\r\n","import React from 'react';\r\nimport {Route} from \"react-router-dom\"\r\nimport loginInfo from \"../../loginInfo\"\r\nimport LoginLoading from \"../loginLoading\"\r\nconst index = ({component:Component,render,children,...rest}) => {\r\n    return (\r\n        <div>\r\n            <Route {...rest} render={context=>{\r\n                if(loginInfo.isLogin){\r\n                    return <Component/>    \r\n                }else{\r\n                   return <LoginLoading/>\r\n                 \r\n                }\r\n            }}></Route>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default index;\r\n","import { Component } from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\nclass routeGuard extends Component {\r\n    componentDidMount() {\r\n        this.unlisten = this.props.history.listen((location, action) => {\r\n            if (this.props.onChange) {\r\n                const prevLocation = this.props.location\r\n                this.props.onChange(prevLocation, location, action, this.unlisten)\r\n            }\r\n        })\r\n\r\n      \r\n    }\r\n    componentWillUnmount() {\r\n        this.unlisten()\r\n    }\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(routeGuard)","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Login from \"./pages/Login\"\nimport Admin from \"./pages/Admin\"\nimport ProtectRoute from \"./components/protectRoute\"\nimport RouteGuard from \"../src/routeGuard\"\nimport path from \"path\"\nfunction App() {\n    console.log(path.resolve(\"../\",\"services/articles.js\"))\n    return (\n        <Router getUserConfirmation={(v, callback) => {\n            console.log(!v)\n            callback(function () {\n                if (!v) {\n                    return true\n                }\n                return false\n            }())\n        }}>\n            <RouteGuard onChange={(prevLocation, location, action, unlisten) => {\n                console.log(prevLocation, location, action)\n            }}>\n                <Switch>\n                    <Route path=\"/login\" component={Login} exact></Route>\n                    <ProtectRoute component={Admin} />\n                </Switch>\n            </RouteGuard>\n        </Router >\n    );\n}\n\nexport default App;\n","export const action =  {\r\n    DECREASE:Symbol(\"decrease\"),\r\n    INCREASE:Symbol(\"increase\"),\r\n    SET:Symbol(\"set\"),\r\n    ASYNCINCREASE:Symbol(\"async-increase\"),\r\n    ASYNCDECREASE:Symbol(\"async-decrease\")\r\n}\r\n\r\n\r\nexport const decreaseAction = function(){\r\n    return {\r\n        type:action.DECREASE\r\n    } \r\n}\r\nexport const increaseAction = function(){\r\n    return {\r\n        type:action.INCREASE\r\n    } \r\n}\r\n\r\nexport const asyncDecreaseAction = function(){\r\n    \r\n    return {\r\n        type:action.ASYNCDECREASE\r\n    } \r\n}\r\nexport const asyncIncreaseAction = function(){\r\n    return {\r\n        type:action.ASYNCINCREASE\r\n    } \r\n}\r\n\r\nexport const setAction =function(payload){\r\n    return {\r\n        type:action.SET,\r\n        payload:payload\r\n    }\r\n}","\r\n\r\nexport function * increase(){\r\n  \r\n}\r\nexport function * decrease(){\r\n \r\n}","import {take,all} from \"redux-saga/effects\"\r\nimport {action} from \"../redux/action\"\r\nimport {increase,decrease} from \"../saga/generator\"\r\nexport default  function * sagatask(){\r\n    console.log('saga启动')\r\n    // 此处run方法中进行对next参数的赋值，值为yield返回值，所以一个普通数据是没意义的，因此要引入指令,指令返回的指令对象，saga会另行处理\r\n    let actions = yield take(action.ASYNCDECREASE)   //take会阻塞,直到dispatch相关action\r\n\r\n    let allactions = yield all([increase(),decrease()])   //all也会阻塞,与take功能相同，但可以对多个生成器进行一并控制了\r\n    console.log('action',actions,allactions)\r\n}","import { createStore, bindActionCreators, applyMiddleware } from \"redux\"\r\nimport * as Action from \"./action\"\r\nimport logger from \"redux-logger\"\r\n// import thunk from \"redux-thunk\"\r\nimport saga from \"redux-saga\"\r\nimport sagatask from '../saga'\r\n// import {getAllStudents} from \"../services/student\"\r\nexport function reducer(state = 5, action) {\r\n\r\n    switch (action.type) {\r\n        case Action.action.DECREASE:\r\n            return state - 1\r\n        case Action.action.INCREASE:\r\n            return state + 1\r\n        case Action.action.SET:\r\n            return state + action.payload\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nlet sagarun = saga()\r\nconst store = createStore(reducer, applyMiddleware(sagarun, logger))\r\n\r\n\r\n//得到的新对象，新对象的属性名和第一个参数的属性名是一致的\r\nconst newObj = bindActionCreators({\r\n  ...Action\r\n\r\n}, store.dispatch)\r\n\r\nconsole.log(newObj)\r\n\r\n\r\n\r\nsagarun.run(sagatask)\r\n\r\n\r\n\r\n//以下等效\r\nnewObj.increaseAction()\r\nstore.dispatch(Action.asyncDecreaseAction())\r\n\r\n// store.dispatch(Action.setAction(10))\r\n\r\n\r\n// getAllStudents().then(res=>{console.log(res)})\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {reducer} from \"./redux\"\n\n\nlet res = ReactDOM.render(\n\n    <App />,\n \n  document.getElementById('root'),function(){console.log(\"rootFiber\",this)}\n);\n\nconsole.log(res)\nconsole.log(reducer)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}